{"version":3,"sources":["components/header/Header.js","components/job-tags/JobTags.js","components/job/Job.js","components/job-list/JobList.js","images/icon-remove.svg","components/filter-tag/FilterTag.js","components/filter-list/FilterList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Job","job","setFilterTags","handleClick","e","language","target","innerHTML","prev","includes","onClick","role","level","languages","map","lang","tools","src","logo","alt","company","new","featured","position","postedAt","contract","location","JobTags","JobList","jobList","id","FilterTag","filter","filterTags","removeIcon","filterToRemove","newFilterTags","el","removeFilter","parentNode","firstChild","FilterList","require","App","useState","jobsToDisplay","setJobsToDisplay","useEffect","displayJobs","matchAll","forEach","filterJobs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cc50cdc.chunk.js","sourcesContent":["import './header.css'\r\n\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"theme-blue\">\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","function Job({ job, setFilterTags }) {\r\n  const handleClick = e => {\r\n    const language = e.target.innerHTML;\r\n    setFilterTags(prev => {\r\n      if (prev.includes(language)) {\r\n        return prev;\r\n      } else {\r\n        return [...prev, language];\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"job-tags\">\r\n      <div className=\"tag light hover\">\r\n        <p onClick={handleClick}>{job.role}</p>\r\n      </div>\r\n      <div className=\"tag light hover\">\r\n        <p onClick={handleClick}>{job.level}</p>\r\n      </div>\r\n      {job.languages.map(lang => {\r\n        return (<div className=\"tag light hover\">\r\n          <p onClick={handleClick}>{lang}</p>\r\n        </div>)\r\n      })}\r\n      {job.tools.map(tools => {\r\n        return (<div className=\"tag light hover\">\r\n          <p onClick={handleClick}>{tools}</p>\r\n        </div>)\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Job;\r\n","import JobTags from '../job-tags/JobTags'\r\nimport './job.css'\r\n\r\nfunction Job({ job, setFilterTags }) {\r\n  return (\r\n    <div className=\"job-card\">\r\n      <img src={job.logo} alt={`${job.company} logo`} />\r\n      <div className=\"info\">\r\n        <div className=\"company\">\r\n          <h3>{job.company}</h3>\r\n          {job.new && <p className=\"bubble clear\">NEW!</p>}\r\n          {job.featured && <p className=\"bubble dark\">FEATURED</p>}\r\n        </div>\r\n        <h2 className=\"hover\">{job.position}</h2>\r\n        <div className=\"details\">\r\n          <p>{job.postedAt}</p>\r\n          <strong><p>&#183;</p></strong>\r\n          <p>{job.contract}</p>\r\n          <strong><p>&#183;</p></strong>\r\n          <p>{job.location}</p>\r\n        </div>\r\n      </div>\r\n      <JobTags job={job} setFilterTags={setFilterTags} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Job;\r\n","import Job from '../job/Job'\r\nimport './jobList.css'\r\n\r\n\r\nfunction JobList({ jobList, setFilterTags }) {\r\n  // map over all the jobs (jobList is only jobs that match filters applied)\r\n  return (\r\n    <div className=\"job-list\">\r\n      {jobList.map(job => {\r\n        return <Job job={job} key={`job-${job.id}`} setFilterTags={setFilterTags} />\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobList;\r\n","export default __webpack_public_path__ + \"static/media/icon-remove.70c075ce.svg\";","\r\nimport removeIcon from '../../images/icon-remove.svg';\r\n\r\nfunction FilterTag({ filter, filterTags, setFilterTags }) {\r\n  \r\n  const removeFilter = filterToRemove => {\r\n    const newFilterTags = filterTags.filter(el => el !== filterToRemove)\r\n    setFilterTags(newFilterTags)\r\n  }\r\n\r\n  const handleClick = e => {\r\n    const filterToRemove = e.target.parentNode.firstChild.innerHTML;\r\n    removeFilter(filterToRemove)\r\n  }\r\n\r\n  return (\r\n    <div className=\"tag light\">\r\n      <p>{filter}</p>\r\n      <img className=\"clear hover\" src={removeIcon} onClick={handleClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterTag;\r\n","import './filter.css'\r\n\r\n\r\nimport FilterTag from '../filter-tag/FilterTag'\r\n\r\nfunction FilterList({filterTags, setFilterTags}) {\r\n  const clearAll = () => {\r\n    setFilterTags([]);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"filter-list\">\r\n      {filterTags.map(filter => {\r\n        return <FilterTag filter={filter} filterTags={filterTags} setFilterTags={setFilterTags} key={`filter-${filter}`} />\r\n      })}\r\n      <p className=\"clear-all hover\" onClick={clearAll}>Clear</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterList;\r\n","import { useEffect, useState } from 'react';\n\nimport './App.css';\n\nimport Header from './components/header/Header';\nimport JobList from './components/job-list/JobList';\nimport FilterList from './components/filter-list/FilterList';\n\nconst jobList = require('./docs/data.json');\n\nfunction App() {\n  const [filterTags, setFilterTags] = useState([])\n  const [jobsToDisplay, setJobsToDisplay] = useState([])\n\n  // function to filter down the list of all jobs to only those that match all language/tools filters selected by the user\n  const filterJobs = () => {\n    const displayJobs = jobList.filter(job => {\n      let matchAll = true;\n      filterTags.forEach(filter => {\n        if (!job.languages.includes(filter) && !job.tools.includes(filter) && job.role !== filter && job.level !== filter) {\n          matchAll = false;\n        }\n      });\n      return matchAll;\n    });\n    setJobsToDisplay(displayJobs)    \n  }\n\n  // re-call filterJobs every time any filters change. \n  useEffect(() => {\n    filterJobs()\n  }, [filterTags])\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <FilterList filterTags={filterTags} setFilterTags={setFilterTags} />\n      <JobList jobList={jobsToDisplay} setFilterTags={setFilterTags} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}